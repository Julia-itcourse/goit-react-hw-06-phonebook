{"version":3,"sources":["components/PhonebookForm/PhonebookForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.jsx","redux/contacts/contactsActions.js","components/ContactList/ContactList.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Filter/Filter.jsx","components/Logo/Logo.jsx","components/App/App.jsx","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","contact","onRemoveContact","className","styles","item","text","name","number","button","type","onClick","onAddContact","createAction","payload","newContact","id","onChangeFilter","mapDispatchToProps","contactsActions","connect","state","contacts","items","filter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","timeout","classNames","PhonebookForm","showNotification","handleChange","target","value","setState","handleSubmit","event","preventDefault","uuidv4","console","log","dir","props","find","existingContact","setTimeout","onSubmit","this","form__group","form__input","onChange","placeholder","required","in","unmountOnExit","notification","Component","Filter","filter__wrap","defaultProps","Logo","App","appear","length","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c290c93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__group\":\"PhonebookForm_form__group__ntmeT\",\"form__label\":\"PhonebookForm_form__label__3yZnm\",\"form__input\":\"PhonebookForm_form__input__1-esy\",\"button\":\"PhonebookForm_button__1yYP6\",\"notification\":\"PhonebookForm_notification__1pZYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__JyVYo\",\"item\":\"ContactItem_item__rdGND\",\"button\":\"ContactItem_button__sAFeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrap\":\"Filter_filter__wrap__Jjrpz\",\"form__input\":\"Filter_form__input__3a4E7\"};","import React from \"react\"\r\nimport styles from \"./ContactItem.module.css\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContactItem = ({ contact , onRemoveContact}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>\r\n        {contact.name}: {contact.number}\r\n      </span>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.objectOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default ContactItem\r\n","import { createAction } from \"@reduxjs/toolkit\"\r\nimport actionTypes from \"./contactsActionTypes\"\r\n\r\nconst onAddContact = createAction(\"contact/add\", ({ name, number, id }) => ({\r\n  payload: {\r\n    newContact: {\r\n      name,\r\n      number,\r\n      id,\r\n    },\r\n  },\r\n}))\r\n\r\nconst onRemoveContact = createAction('contact/remove');\r\n\r\n// const onRemoveContact = (contactId) => ({\r\n//   type: actionTypes.REMOVE,\r\n//   payload: {\r\n//     contactId,\r\n//   },\r\n// })\r\n\r\nconst onChangeFilter = createAction('contact/filter')\r\n\r\n// const onChangeFilter = (filter) => ({\r\n//   type: actionTypes.CHANGE_FILTER,\r\n//   payload: {\r\n//     filter,\r\n//   },\r\n// })\r\n\r\nexport default {\r\n  onAddContact,\r\n  onRemoveContact,\r\n  onChangeFilter,\r\n}\r\n\r\n//*_______________BEFORE TOOLKIT___________________________________\r\n\r\n// import actionTypes from \"./contactsActionTypes\"\r\n// import { v4 as uuidv4 } from \"uuid\"\r\n\r\n// const onAddContact = ({ name, number, id }) => {\r\n//   console.log(\"contactsActiosn.onAddContact\")\r\n//   return {\r\n//     type: actionTypes.ADD,\r\n//     payload: {\r\n//       newContact: {\r\n//         name,\r\n//         number,\r\n//         id,\r\n//       },\r\n//     },\r\n//   }\r\n// }\r\n\r\n// const onRemoveContact = (contactId) => ({\r\n//   type: actionTypes.REMOVE,\r\n//   payload: {\r\n//     contactId,\r\n//   },\r\n// })\r\n\r\n// const onChangeFilter = (filter) => ({\r\n//   type: actionTypes.CHANGE_FILTER,\r\n//   payload: {\r\n//     filter,\r\n//   },\r\n// })\r\n\r\n// export default {\r\n//   onAddContact,\r\n//   onRemoveContact,\r\n//   onChangeFilter,\r\n// }\r\n","import React from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./ContactList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsActions from \"../../redux/contacts/contactsActions\"\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {contacts.map((item) => (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={250}\r\n          classNames=\"ContactList-item-slide\"\r\n        >\r\n          <ContactItem\r\n            contact={item}\r\n            onRemoveContact={() => onRemoveContact(item.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: arrayOf(PropTypes.object)\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n\r\n  return { contacts: filteredContacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.onRemoveContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from \"react\"\r\nimport styles from \"./PhonebookForm.module.css\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./notification.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsActions from \"../../redux/contacts/contactsActions\"\r\n\r\nclass PhonebookForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showNotification: false,\r\n  }\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n\r\n    console.log(\"PhonebookForm.handleSubmit\")\r\n    console.dir(this.props.contacts)\r\n\r\n    const sameContact = this.props.contacts.items.find(\r\n      (existingContact) => existingContact.name === contact.name\r\n    )\r\n    if (sameContact) {\r\n      console.log(\"same contact exists\")\r\n      this.setState({ showNotification: true })\r\n      setTimeout(() => {\r\n        this.setState({ showNotification: false })\r\n      }, 1500)\r\n    } else {\r\n      this.props.onAddContact(contact)\r\n      this.setState({ name: \"\", number: \"\" })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form__group}>\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          required\r\n        />\r\n\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Phone number\"\r\n          required\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n\r\n        <CSSTransition\r\n          in={this.state.showNotification}\r\n          classNames=\"notification\"\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.notification}>Contact already exists!</div>\r\n        </CSSTransition>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.onAddContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm)\r\n","import React from \"react\"\r\nimport styles from \"./Filter.module.css\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../redux/contacts/contactsActions'\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className = {styles.filter__wrap}>\r\n    <h2>Filter the contact list</h2>\r\n    <label>\r\n      <input\r\n        className={styles.form__input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(event) => onChangeFilter(event.target.value)}\r\n      />\r\n    </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  value:state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.onChangeFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport  './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n      \r\n  \r\n       <h1 className=\"Logo\">Phonebook</h1> \r\n\r\n)\r\n}\r\n\r\nexport default Logo","import React, { Component } from \"react\"\nimport ContactList from \"../ContactList\"\nimport PhonebookForm from \"../PhonebookForm\"\nimport Filter from \"../Filter\"\nimport Logo from \"../Logo\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { connect } from \"react-redux\"\n\nclass App extends Component {\n  state = {\n    showNotification: false,\n  }\n\n  render() {\n    return (\n      <>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"Logo-slideIn\"\n        >\n          <Logo />\n        </CSSTransition>\n\n        <PhonebookForm />\n\n        <CSSTransition\n          in={this.props.contacts.items.length > 1}\n          timeout={500}\n          classNames={\"filter\"}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        <ContactList />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"App.mapStateToProps\")\n  return { contacts: state.contacts }\n}\n\nexport default connect(mapStateToProps)(App)\n\n// export default App\n\n//*_______________BEFORE_REDUX___________________\n\n// import React, { Component } from \"react\"\n// import ContactList from \"../ContactList\"\n// import PhonebookForm from \"../PhonebookForm\"\n// import Filter from \"../Filter\"\n// import Logo from \"../Logo\"\n// import { CSSTransition } from \"react-transition-group\"\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     number: \"\",\n//     showNotification: false\n//   }\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\")\n\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n//   onAddContact = (newContact) => {\n//     const sameContact = this.state.contacts.find(\n//       (contact) => contact.name === newContact.name\n//     )\n//     if (sameContact) {\n//       this.setState({ showNotification: true });\n//       setTimeout(() => this.setState({ showNotification: false }), 1500);\n//     } else {\n//       this.setState((prevState) => {\n//         return {\n//           contacts: [...prevState.contacts, newContact],\n//         }\n//       })\n//     }\n//   }\n\n//   onRemoveContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       }\n//     })\n//   }\n\n//   onChangeFilter = (filter) => {\n//     this.setState({ filter })\n//   }\n\n//   render() {\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter)\n//     )\n//     return (\n//       <>\n//       <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//         <Logo />\n//         </CSSTransition>\n\n//         <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//         <CSSTransition\n//             in={this.state.contacts.length > 1}\n//             timeout={500}\n//             classNames={\"filter\"}\n//             unmountOnExit\n//           >\n\n//           <Filter\n//             value={this.state.filter}\n//             onChangeFilter={this.onChangeFilter}\n//           />\n//           </CSSTransition>\n\n//           <ContactList\n//             contacts={filteredContacts}\n//             onRemoveContact={this.onRemoveContact}\n//           />\n\n//       </>\n//     )\n//   }\n// }\n\n// export default App\n","import { combineReducers } from \"redux\"\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport contactsActions from './contactsActions'\r\n\r\nconst handleAdd = (state, action) =>{\r\n    return [...state, action.payload.newContact]\r\n}\r\n\r\nconst handleRemove = (state, action) =>{\r\n    return state.filter((contact) => contact.id !== action.payload)\r\n}\r\n\r\nconst items = createReducer([], {\r\n    [contactsActions.onAddContact]: handleAdd,\r\n    [contactsActions.onRemoveContact]: handleRemove,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.onChangeFilter]: (state, action) => action.payload\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})\r\n\r\n//*______________________BEFORE CREATE REDUCER__________________\r\n// import { combineReducers } from \"redux\"\r\n// import contactsActions from './contactsActions'\r\n\r\n\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   console.log(\"contactsReducer.items\")\r\n//   switch (type) {\r\n//     case contactsActions.onAddContact.type:\r\n//       console.log(payload.newContact)\r\n//       return [...state, payload.newContact]\r\n\r\n//     case contactsActions.onRemoveContact.type:\r\n//       return state.filter((contact) => contact.id !== payload)\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   console.log(\"contactsReducer.filter\")\r\n//   switch (type) {\r\n//     case contactsActions.onChangeFilter.type:\r\n//       return payload\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// })\r\n\r\n// *______________________BEFORE TOOLKIT__________________________\r\n\r\n// import { combineReducers } from \"redux\"\r\n// import actionTypes from \"./contactsActionTypes\"\r\n\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   console.log(\"contactsReducer.items\")\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       console.log(payload.newContact)\r\n//       return [...state, payload.newContact]\r\n\r\n//     case actionTypes.REMOVE:\r\n//       return state.filter((contact) => contact.id !== payload.contactId)\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   console.log(\"contactsReducer.filter\")\r\n//   switch (type) {\r\n//     case actionTypes.CHANGE_FILTER:\r\n//       return payload.filter\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// })\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport contactsReducer from \"./contacts/contactsReducer\"\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n})\r\n\r\nexport default store\r\n\r\n//*_____________BEFORE TOOLKIT__________________________________________\r\n\r\n// import { createStore, combineReducers } from \"redux\"\r\n// import contactsReducer from \"./contacts/contactsReducer\"\r\n\r\n// const rootReducer = combineReducers({ contacts: contactsReducer })\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// )\r\n\r\n// export default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./sharedStyles/global.css\"\nimport App from \"./components/App/App\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}