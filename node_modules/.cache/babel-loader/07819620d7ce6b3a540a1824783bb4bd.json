{"ast":null,"code":"import _classCallCheck from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{Component}from\"react\";import ContactList from\"../ContactList\";import PhonebookForm from\"../PhonebookForm\";import Filter from\"../Filter\";import Logo from\"../Logo\";import{CSSTransition}from\"react-transition-group\";import{connect}from\"react-redux\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={showNotification:false};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CSSTransition,{in:true,appear:true,timeout:500,classNames:\"Logo-slideIn\",children:/*#__PURE__*/_jsx(Logo,{})}),/*#__PURE__*/_jsx(PhonebookForm,{}),/*#__PURE__*/_jsx(CSSTransition,{in:this.props.contacts.items.length>1,timeout:500,classNames:\"filter\",unmountOnExit:true,children:/*#__PURE__*/_jsx(Filter,{})}),/*#__PURE__*/_jsx(ContactList,{})]});}}]);return App;}(Component);var mapStateToProps=function mapStateToProps(state){console.log(\"App.mapStateToProps\");return{contacts:state.contacts};};export default connect(mapStateToProps)(App);// export default App\n//*_______________BEFORE_REDUX___________________\n// import React, { Component } from \"react\"\n// import ContactList from \"../ContactList\"\n// import PhonebookForm from \"../PhonebookForm\"\n// import Filter from \"../Filter\"\n// import Logo from \"../Logo\"\n// import { CSSTransition } from \"react-transition-group\"\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     number: \"\",\n//     showNotification: false\n//   }\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\")\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       })\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//     }\n//   }\n//   onAddContact = (newContact) => {\n//     const sameContact = this.state.contacts.find(\n//       (contact) => contact.name === newContact.name\n//     )\n//     if (sameContact) {\n//       this.setState({ showNotification: true });\n//       setTimeout(() => this.setState({ showNotification: false }), 1500);\n//     } else {\n//       this.setState((prevState) => {\n//         return {\n//           contacts: [...prevState.contacts, newContact],\n//         }\n//       })\n//     }\n//   }\n//   onRemoveContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       }\n//     })\n//   }\n//   onChangeFilter = (filter) => {\n//     this.setState({ filter })\n//   }\n//   render() {\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter)\n//     )\n//     return (\n//       <>\n//       <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//         <Logo />\n//         </CSSTransition>\n//         <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//         <CSSTransition\n//             in={this.state.contacts.length > 1}\n//             timeout={500}\n//             classNames={\"filter\"}\n//             unmountOnExit\n//           >\n//           <Filter\n//             value={this.state.filter}\n//             onChangeFilter={this.onChangeFilter}\n//           />\n//           </CSSTransition>\n//           <ContactList\n//             contacts={filteredContacts}\n//             onRemoveContact={this.onRemoveContact}\n//           />\n//       </>\n//     )\n//   }\n// }\n// export default App","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactList","PhonebookForm","Filter","Logo","CSSTransition","connect","App","state","showNotification","props","contacts","items","length","mapStateToProps","console","log"],"mappings":"yvBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,OAAT,KAAwB,aAAxB,C,GAEMC,CAAAA,G,+SACJC,K,CAAQ,CACNC,gBAAgB,CAAE,KADZ,C,sEAIC,CACP,mBACE,wCACE,KAAC,aAAD,EACE,EAAE,CAAE,IADN,CAEE,MAAM,CAAE,IAFV,CAGE,OAAO,CAAE,GAHX,CAIE,UAAU,CAAC,cAJb,uBAME,KAAC,IAAD,IANF,EADF,cAUE,KAAC,aAAD,IAVF,cAYE,KAAC,aAAD,EACE,EAAE,CAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,MAA1B,CAAmC,CADzC,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAE,QAHd,CAIE,aAAa,KAJf,uBAME,KAAC,MAAD,IANF,EAZF,cAqBE,KAAC,WAAD,IArBF,GADF,CAyBD,C,iBA/Beb,S,EAkClB,GAAMc,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACN,KAAD,CAAW,CACjCO,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,MAAO,CAAEL,QAAQ,CAAEH,KAAK,CAACG,QAAlB,CAAP,CACD,CAHD,CAKA,cAAeL,CAAAA,OAAO,CAACQ,eAAD,CAAP,CAAyBP,GAAzB,CAAf,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\"\nimport ContactList from \"../ContactList\"\nimport PhonebookForm from \"../PhonebookForm\"\nimport Filter from \"../Filter\"\nimport Logo from \"../Logo\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { connect } from \"react-redux\"\n\nclass App extends Component {\n  state = {\n    showNotification: false,\n  }\n\n  render() {\n    return (\n      <>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"Logo-slideIn\"\n        >\n          <Logo />\n        </CSSTransition>\n\n        <PhonebookForm />\n\n        <CSSTransition\n          in={this.props.contacts.items.length > 1}\n          timeout={500}\n          classNames={\"filter\"}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        <ContactList />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"App.mapStateToProps\")\n  return { contacts: state.contacts }\n}\n\nexport default connect(mapStateToProps)(App)\n\n// export default App\n\n//*_______________BEFORE_REDUX___________________\n\n// import React, { Component } from \"react\"\n// import ContactList from \"../ContactList\"\n// import PhonebookForm from \"../PhonebookForm\"\n// import Filter from \"../Filter\"\n// import Logo from \"../Logo\"\n// import { CSSTransition } from \"react-transition-group\"\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     number: \"\",\n//     showNotification: false\n//   }\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\")\n\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n//   onAddContact = (newContact) => {\n//     const sameContact = this.state.contacts.find(\n//       (contact) => contact.name === newContact.name\n//     )\n//     if (sameContact) {\n//       this.setState({ showNotification: true });\n//       setTimeout(() => this.setState({ showNotification: false }), 1500);\n//     } else {\n//       this.setState((prevState) => {\n//         return {\n//           contacts: [...prevState.contacts, newContact],\n//         }\n//       })\n//     }\n//   }\n\n//   onRemoveContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       }\n//     })\n//   }\n\n//   onChangeFilter = (filter) => {\n//     this.setState({ filter })\n//   }\n\n//   render() {\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter)\n//     )\n//     return (\n//       <>\n//       <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//         <Logo />\n//         </CSSTransition>\n\n//         <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//         <CSSTransition\n//             in={this.state.contacts.length > 1}\n//             timeout={500}\n//             classNames={\"filter\"}\n//             unmountOnExit\n//           >\n\n//           <Filter\n//             value={this.state.filter}\n//             onChangeFilter={this.onChangeFilter}\n//           />\n//           </CSSTransition>\n\n//           <ContactList\n//             contacts={filteredContacts}\n//             onRemoveContact={this.onRemoveContact}\n//           />\n\n//       </>\n//     )\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}