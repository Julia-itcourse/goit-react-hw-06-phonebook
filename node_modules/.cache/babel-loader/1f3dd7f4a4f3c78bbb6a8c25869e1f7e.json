{"ast":null,"code":"import _classCallCheck from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from\"react\";import ContactItem from\"../ContactItem\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import\"./ContactList.css\";import{connect}from\"react-redux\";import contactsActions from\"../../redux/contacts/contactsActions\";var ContactList=/*#__PURE__*/function(_Component){_inherits(ContactList,_Component);var _super=_createSuper(ContactList);function ContactList(){_classCallCheck(this,ContactList);return _super.apply(this,arguments);}_createClass(ContactList,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onSaveContact();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){return this.props.contacts?localStorage.setItem('contacts',JSON.stringify(this.props.contacts)):[];}},{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsx(TransitionGroup,{component:\"ul\",className:\"ContactList\",children:this.props.contacts.map(function(item){return/*#__PURE__*/_jsx(CSSTransition,{timeout:250,classNames:\"ContactList-item-slide\",children:/*#__PURE__*/_jsx(ContactItem,{contact:item,onRemoveContact:function onRemoveContact(){return _this.props.onRemoveContact(item.id);}})},item.id);})});}}]);return ContactList;}(Component);var mapStateToProps=function mapStateToProps(state){var _state$contacts=state.contacts,items=_state$contacts.items,filter=_state$contacts.filter;var filteredContacts=items.filter(function(contact){return contact.name.toLowerCase().includes(filter.toLowerCase());});return{contacts:filteredContacts};};var mapDispatchToProps={onRemoveContact:contactsActions.onRemoveContact,onSaveContact:contactsActions.onSaveContact};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["React","Component","ContactItem","CSSTransition","TransitionGroup","connect","contactsActions","ContactList","props","onSaveContact","prevProps","prevState","contacts","localStorage","setItem","JSON","stringify","map","item","onRemoveContact","id","mapStateToProps","state","items","filter","filteredContacts","contact","name","toLowerCase","includes","mapDispatchToProps"],"mappings":"upBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAO,mBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sCAA5B,C,GAGMC,CAAAA,W,6RAEe,CACjB,KAAKC,KAAL,CAAWC,aAAX,GACD,C,8DAEgBC,S,CAAWC,S,CAAU,CACtC,MAAQ,MAAKH,KAAL,CAAWI,QAAX,CAAoBC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCC,IAAI,CAACC,SAAL,CAAe,KAAKR,KAAL,CAAWI,QAA1B,CAAjC,CAApB,CAA0F,EAAlG,CACD,C,uCAEO,gBACN,mBACE,KAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAgC,SAAS,CAAC,aAA1C,UACG,KAAKJ,KAAL,CAAWI,QAAX,CAAoBK,GAApB,CAAwB,SAACC,IAAD,qBACvB,KAAC,aAAD,EAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,wBAHb,uBAKE,KAAC,WAAD,EACE,OAAO,CAAEA,IADX,CAEE,eAAe,CAAE,iCAAM,CAAA,KAAI,CAACV,KAAL,CAAWW,eAAX,CAA2BD,IAAI,CAACE,EAAhC,CAAN,EAFnB,EALF,EACOF,IAAI,CAACE,EADZ,CADuB,EAAxB,CADH,EADF,CAgBD,C,yBA3ByBnB,S,EA8B1B,GAAMoB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,qBACPA,KAAK,CAACV,QADC,CACzBW,KADyB,iBACzBA,KADyB,CAClBC,MADkB,iBAClBA,MADkB,CAEjC,GAAMC,CAAAA,gBAAgB,CAAGF,KAAK,CAACC,MAAN,CAAa,SAACE,OAAD,QACpCA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CADoC,EAAb,CAAzB,CAIA,MAAO,CAAEhB,QAAQ,CAAEa,gBAAZ,CAAP,CACD,CAPD,CASA,GAAMK,CAAAA,kBAAkB,CAAG,CACzBX,eAAe,CAAEb,eAAe,CAACa,eADR,CAEzBV,aAAa,CAAEH,eAAe,CAACG,aAFN,CAA3B,CAIA,cAAeJ,CAAAA,OAAO,CAACgB,eAAD,CAAkBS,kBAAlB,CAAP,CAA6CvB,WAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./ContactList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsActions from \"../../redux/contacts/contactsActions\"\r\n\r\n\r\nclass ContactList extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.onSaveContact()\r\n  }\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n  return (this.props.contacts?localStorage.setItem('contacts', JSON.stringify(this.props.contacts)):[])\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {this.props.contacts.map((item) => (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={250}\r\n          classNames=\"ContactList-item-slide\"\r\n        >\r\n          <ContactItem\r\n            contact={item}\r\n            onRemoveContact={() => this.props.onRemoveContact(item.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n\r\n  return { contacts: filteredContacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.onRemoveContact,\r\n  onSaveContact: contactsActions.onSaveContact\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n"]},"metadata":{},"sourceType":"module"}