{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\dev\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\PhonebookForm\\\\PhonebookForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport styles from \"./PhonebookForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./notification.css\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\n\nconst PhonebookForm = () => {\n  _s();\n\n  const {\n    name,\n    setName\n  } = useState(\"\");\n  const {\n    number,\n    setNumber\n  } = useState(\"\");\n  const {\n    showNotification,\n    setShowNotification\n  } = useState(false);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = contact => {\n    dispatch(contactsActions.onAddContact(contact));\n  };\n\n  const changeName = event => {\n    setName(event.target.value);\n  };\n\n  const changeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    };\n    const sameContact = contacts.items.find(existingContact => existingContact.name === contact.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: this.handleSubmit,\n    className: styles.form__group,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.form__input,\n      name: \"name\",\n      type: \"text\",\n      value: name,\n      onChange: changeName,\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.form__input,\n      name: \"number\",\n      type: \"text\",\n      value: number,\n      onChange: changeNumber,\n      placeholder: \"Phone number\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: showNotification,\n      classNames: \"notification\",\n      timeout: 250,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.notification,\n        children: \"Contact already exists!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhonebookForm, \"ZnQSLKKNRv+BaPyBwtYXKcfl1wU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PhonebookForm;\n\nclass OldPhonebookForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      number: \"\",\n      showNotification: false\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const contact = {\n        id: uuidv4(),\n        name: this.state.name,\n        number: this.state.number\n      };\n      console.log(\"PhonebookForm.handleSubmit\");\n      console.dir(this.props.contacts);\n      const sameContact = this.props.contacts.items.find(existingContact => existingContact.name === contact.name);\n\n      if (sameContact) {\n        console.log(\"same contact exists\");\n        this.setState({\n          showNotification: true\n        });\n        setTimeout(() => {\n          this.setState({\n            showNotification: false\n          });\n        }, 1500);\n      } else {\n        this.props.onAddContact(contact);\n        this.setState({\n          name: \"\",\n          number: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: styles.form__group,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.form__input,\n        name: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.form__input,\n        name: \"number\",\n        type: \"text\",\n        value: this.state.number,\n        onChange: this.handleChange,\n        placeholder: \"Phone number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: this.state.showNotification,\n        classNames: \"notification\",\n        timeout: 250,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.notification,\n          children: \"Contact already exists!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.onAddContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PhonebookForm\");","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/PhonebookForm/PhonebookForm.jsx"],"names":["React","Component","styles","v4","uuidv4","CSSTransition","connect","useState","useSelector","useDispatch","contactsActions","getContacts","PhonebookForm","name","setName","number","setNumber","showNotification","setShowNotification","contacts","dispatch","onAddContact","contact","changeName","event","target","value","changeNumber","onSubmit","preventDefault","id","sameContact","items","find","existingContact","handleSubmit","form__group","form__input","button","notification","OldPhonebookForm","state","handleChange","setState","console","log","dir","props","setTimeout","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./PhonebookForm.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./notification.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst PhonebookForm = () => {\r\n  const { name, setName } = useState(\"\");\r\n  const { number, setNumber } = useState(\"\");\r\n  const { showNotification, setShowNotification } = useState(false);\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const onAddContact = (contact) => {\r\n    dispatch(contactsActions.onAddContact(contact));\r\n  };\r\n\r\n  const changeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const changeNumber = (event) => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const sameContact = contacts.items.find(\r\n      (existingContact) => existingContact.name === contact.name,\r\n    );\r\n\r\n\r\n\r\n    \r\n  };\r\n  return (\r\n    <form onSubmit={this.handleSubmit} className={styles.form__group}>\r\n      <input\r\n        className={styles.form__input}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={changeName}\r\n        placeholder=\"Name\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        className={styles.form__input}\r\n        name=\"number\"\r\n        type=\"text\"\r\n        value={number}\r\n        onChange={changeNumber}\r\n        placeholder=\"Phone number\"\r\n        required\r\n      />\r\n\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n\r\n      <CSSTransition\r\n        in={showNotification}\r\n        classNames=\"notification\"\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <div className={styles.notification}>Contact already exists!</div>\r\n      </CSSTransition>\r\n    </form>\r\n  );\r\n};\r\nclass OldPhonebookForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showNotification: false,\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    console.log(\"PhonebookForm.handleSubmit\");\r\n    console.dir(this.props.contacts);\r\n\r\n    const sameContact = this.props.contacts.items.find(\r\n      (existingContact) => existingContact.name === contact.name,\r\n    );\r\n    if (sameContact) {\r\n      console.log(\"same contact exists\");\r\n      this.setState({ showNotification: true });\r\n      setTimeout(() => {\r\n        this.setState({ showNotification: false });\r\n      }, 1500);\r\n    } else {\r\n      this.props.onAddContact(contact);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form__group}>\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          required\r\n        />\r\n\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Phone number\"\r\n          required\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n\r\n        <CSSTransition\r\n          in={this.state.showNotification}\r\n          classNames=\"notification\"\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.notification}>Contact already exists!</div>\r\n        </CSSTransition>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.onAddContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\r\n"]},"metadata":{},"sourceType":"module"}