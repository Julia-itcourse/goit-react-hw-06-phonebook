{"ast":null,"code":"import { combineReducers } from 'redux';\nimport actionTypes from './contactsActionTypes'; //?State\n// {\n//     contacts: {\n//       items: [],\n//       filter: ''\n//     }\n//   }\n\nconst items = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return [...state];\n\n    case actionTypes.REMOVE:\n      return state.filter(contact => contact.id !== payload.contactId);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/redux/contacts/contactsReducer.js"],"names":["combineReducers","actionTypes","items","state","type","payload","ADD","REMOVE","filter","contact","id","contactId","CHANGE_FILTER"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAb,KAAiC;AAC3C,UAAQD,IAAR;AACI,SAAKH,WAAW,CAACK,GAAjB;AACI,aAAO,CAAC,GAAGH,KAAJ,CAAP;;AAGJ,SAAKF,WAAW,CAACM,MAAjB;AACI,aAAOJ,KAAK,CAACK,MAAN,CAAcC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAcL,OAAO,CAACM,SAA/C,CAAP;;AACA;AAAS,aAAOR,KAAP;AAPjB;AASH,CAVD;;AAWA,MAAMK,MAAM,GAAG,CAACL,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAb,KAAgC;AAC3C,UAAQD,IAAR;AACI,SAAKH,WAAW,CAACW,aAAjB;AACI,aAAOP,OAAO,CAACG,MAAf;;AAEJ;AAAS,aAAOL,KAAP;AAJb;AAMH,CAPD;;AASA,eAAeH,eAAe,CAAC;AAC3BE,EAAAA,KAD2B;AAE3BM,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux'\r\nimport actionTypes from './contactsActionTypes'\r\n\r\n\r\n\r\n//?State\r\n// {\r\n//     contacts: {\r\n//       items: [],\r\n//       filter: ''\r\n//     }\r\n//   }\r\n\r\nconst items = (state = [], {type, payload}) => {\r\n    switch (type){\r\n        case actionTypes.ADD:\r\n            return [...state];\r\n        \r\n\r\n        case actionTypes.REMOVE:\r\n            return state.filter (contact => contact.id !==payload.contactId);\r\n            default: return state;\r\n    }\r\n};\r\nconst filter = (state = '', {type, payload}) =>{\r\n    switch (type) {\r\n        case actionTypes.CHANGE_FILTER:\r\n            return payload.filter;\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})"]},"metadata":{},"sourceType":"module"}