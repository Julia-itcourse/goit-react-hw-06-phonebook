{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\dev\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\";\nimport React from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport PropTypes, { arrayOf } from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./ContactList.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst ContactList = ({\n  contacts,\n  onRemoveContact\n}) => {\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    component: \"ul\",\n    className: \"ContactList\",\n    children: contacts.map(item => /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 250,\n      classNames: \"ContactList-item-slide\",\n      children: /*#__PURE__*/_jsxDEV(ContactItem, {\n        contact: item,\n        onRemoveContact: () => onRemoveContact(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; // ContactList.propTypes = {\n//   contacts: arrayOf(PropTypes.object)\n// }\n\n\n_c = ContactList;\n\nconst mapStateToProps = state => {\n  const {\n    items,\n    filter\n  } = state.contacts;\n  const filteredContacts = items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  return {\n    contacts: filteredContacts\n  };\n};\n\nconst mapDispatchToProps = {\n  onRemoveContact: contactsActions.onRemoveContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["React","ContactItem","PropTypes","arrayOf","CSSTransition","TransitionGroup","connect","contactsActions","ContactList","contacts","onRemoveContact","map","item","id","mapStateToProps","state","items","filter","filteredContacts","contact","name","toLowerCase","includes","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAsB,OAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,IAAoBC,OAApB,QAAmC,YAAnC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AACrD,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,SAAS,EAAC,aAA1C;AAAA,cACGD,QAAQ,CAACE,GAAT,CAAcC,IAAD,iBACZ,QAAC,aAAD;AAEE,MAAA,OAAO,EAAE,GAFX;AAGE,MAAA,UAAU,EAAC,wBAHb;AAAA,6BAKE,QAAC,WAAD;AACE,QAAA,OAAO,EAAEA,IADX;AAEE,QAAA,eAAe,EAAE,MAAMF,eAAe,CAACE,IAAI,CAACC,EAAN;AAFxC;AAAA;AAAA;AAAA;AAAA;AALF,OACOD,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD,C,CAmBA;AACA;AAEA;;;KAtBML,W;;AAwBN,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAAK,CAACN,QAAhC;AACA,QAAMS,gBAAgB,GAAGF,KAAK,CAACC,MAAN,CAAcE,OAAD,IACpCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CADuB,CAAzB;AAIA,SAAO;AAAEZ,IAAAA,QAAQ,EAAES;AAAZ,GAAP;AACD,CAPD;;AASA,MAAMK,kBAAkB,GAAG;AACzBb,EAAAA,eAAe,EAAEH,eAAe,CAACG;AADR,CAA3B;AAGA,eAAeJ,OAAO,CAACQ,eAAD,EAAkBS,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import React, {} from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./ContactList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsActions from \"../../redux/contacts/contactsActions\"\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {contacts.map((item) => (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={250}\r\n          classNames=\"ContactList-item-slide\"\r\n        >\r\n          <ContactItem\r\n            contact={item}\r\n            onRemoveContact={() => onRemoveContact(item.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: arrayOf(PropTypes.object)\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n\r\n  return { contacts: filteredContacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.onRemoveContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n"]},"metadata":{},"sourceType":"module"}