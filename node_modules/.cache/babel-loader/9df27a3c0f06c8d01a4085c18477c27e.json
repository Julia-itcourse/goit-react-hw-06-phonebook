{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import ContactItem from\"../ContactItem\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import\"./ContactList.css\";import{connect}from\"react-redux\";import contactsActions from\"../../redux/contacts/contactsActions\";var ContactList=function ContactList(_ref){var contacts=_ref.contacts,_onRemoveContact=_ref.onRemoveContact;return/*#__PURE__*/_jsx(TransitionGroup,{component:\"ul\",className:\"ContactList\",children:contacts.map(function(item){return/*#__PURE__*/_jsx(CSSTransition,{timeout:250,classNames:\"ContactList-item-slide\",children:/*#__PURE__*/_jsx(ContactItem,{contact:item,onRemoveContact:function onRemoveContact(){return _onRemoveContact(item.id);}})},item.id);})});};// ContactList.propTypes = {\n//   contacts: arrayOf(PropTypes.object)\n// }\nvar mapStateToProps=function mapStateToProps(state){var _state$contacts=state.contacts,items=_state$contacts.items,filter=_state$contacts.filter;var filteredContacts=items.filter(function(contact){return contact.name.toLowerCase().includes(filter.toLowerCase());});return{contacts:filteredContacts};};var mapDispatchToProps={onRemoveContact:contactsActions.onRemoveContact};export default connect(mapStateToProps,mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["React","ContactItem","CSSTransition","TransitionGroup","connect","contactsActions","ContactList","contacts","onRemoveContact","map","item","id","mapStateToProps","state","items","filter","filteredContacts","contact","name","toLowerCase","includes","mapDispatchToProps"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAO,mBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sCAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,gBAAsB,MAAtBA,eAAsB,CACrD,mBACE,KAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAgC,SAAS,CAAC,aAA1C,UACGD,QAAQ,CAACE,GAAT,CAAa,SAACC,IAAD,qBACZ,KAAC,aAAD,EAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,wBAHb,uBAKE,KAAC,WAAD,EACE,OAAO,CAAEA,IADX,CAEE,eAAe,CAAE,iCAAMF,CAAAA,gBAAe,CAACE,IAAI,CAACC,EAAN,CAArB,EAFnB,EALF,EACOD,IAAI,CAACC,EADZ,CADY,EAAb,CADH,EADF,CAgBD,CAjBD,CAmBA;AACA;AAEA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,qBACPA,KAAK,CAACN,QADC,CACzBO,KADyB,iBACzBA,KADyB,CAClBC,MADkB,iBAClBA,MADkB,CAEjC,GAAMC,CAAAA,gBAAgB,CAAGF,KAAK,CAACC,MAAN,CAAa,SAACE,OAAD,QACpCA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CADoC,EAAb,CAAzB,CAIA,MAAO,CAAEZ,QAAQ,CAAES,gBAAZ,CAAP,CACD,CAPD,CASA,GAAMK,CAAAA,kBAAkB,CAAG,CACzBb,eAAe,CAAEH,eAAe,CAACG,eADR,CAA3B,CAGA,cAAeJ,CAAAA,OAAO,CAACQ,eAAD,CAAkBS,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import React from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./ContactList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsActions from \"../../redux/contacts/contactsActions\"\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {contacts.map((item) => (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={250}\r\n          classNames=\"ContactList-item-slide\"\r\n        >\r\n          <ContactItem\r\n            contact={item}\r\n            onRemoveContact={() => onRemoveContact(item.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: arrayOf(PropTypes.object)\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts\r\n  const filteredContacts = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n\r\n  return { contacts: filteredContacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.onRemoveContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n"]},"metadata":{},"sourceType":"module"}