{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport actionTypes from \"./contactsActionTypes\"; //?State\n// {\n//     contacts: {\n//       items: [],\n//       filter: ''\n//     }\n//   }\n\nconst items = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.ADD:\n      console.log(payload.newContact);\n      return [...state, payload.newContact];\n\n    case actionTypes.REMOVE:\n      return state.filter(contact => contact.id !== payload.contactId);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/redux/contacts/contactsReducer.js"],"names":["combineReducers","actionTypes","items","state","type","payload","ADD","console","log","newContact","REMOVE","filter","contact","id","contactId","CHANGE_FILTER"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAC/C,UAAQD,IAAR;AACE,SAAKH,WAAW,CAACK,GAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,UAApB;AACA,aAAO,CAAC,GAAGN,KAAJ,EAAWE,OAAO,CAACI,UAAnB,CAAP;;AAEF,SAAKR,WAAW,CAACS,MAAjB;AACE,aAAOP,KAAK,CAACQ,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,OAAO,CAACS,SAAjD,CAAP;;AAEF;AACE,aAAOX,KAAP;AATJ;AAWD,CAZD;;AAaA,MAAMQ,MAAM,GAAG,CAACR,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AAChD,UAAQD,IAAR;AACE,SAAKH,WAAW,CAACc,aAAjB;AACE,aAAOV,OAAO,CAACM,MAAf;;AAEF;AACE,aAAOR,KAAP;AALJ;AAOD,CARD;;AAUA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,KAD6B;AAE7BS,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\"\r\nimport actionTypes from \"./contactsActionTypes\"\r\n\r\n//?State\r\n// {\r\n//     contacts: {\r\n//       items: [],\r\n//       filter: ''\r\n//     }\r\n//   }\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      console.log(payload.newContact)\r\n      return [...state, payload.newContact]\r\n\r\n    case actionTypes.REMOVE:\r\n      return state.filter((contact) => contact.id !== payload.contactId)\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_FILTER:\r\n      return payload.filter\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})\r\n"]},"metadata":{},"sourceType":"module"}