{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nconst handleAdd = (state, action) => {\n  return [...state, action.payload.newContact];\n};\n\nconst handleRemove = (state, action) => {\n  return state.filter(contact => contact.id !== action.payload);\n};\n\nconst handleSave = (state, action) => {\n  return localStorage.getItem(\"contacts\") ? JSON.parse(localStorage.getItem(\"contacts\")) : state;\n};\n\nconst items = createReducer([], {\n  [contactsActions.onAddContact]: handleAdd,\n  [contactsActions.onRemoveContact]: handleRemove,\n  [contactsActions.onSaveContact]: handleSave\n});\nconst filter = createReducer(\"\", {\n  [contactsActions.onChangeFilter]: (_, action) => action.payload\n});\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/redux/contacts/contactsReducer.js"],"names":["combineReducers","createReducer","contactsActions","handleAdd","state","action","payload","newContact","handleRemove","filter","contact","id","handleSave","localStorage","getItem","JSON","parse","items","onAddContact","onRemoveContact","onSaveContact","onChangeFilter","_"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAP,CAAeC,UAA1B,CAAP;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOD,KAAK,CAACK,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACC,OAAhD,CAAP;AACD,CAFD;;AAIA,MAAMM,UAAU,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOQ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACHC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADG,GAEHV,KAFJ;AAGD,CAJD;;AAMA,MAAMa,KAAK,GAAGhB,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACC,eAAe,CAACgB,YAAjB,GAAgCf,SADF;AAE9B,GAACD,eAAe,CAACiB,eAAjB,GAAmCX,YAFL;AAG9B,GAACN,eAAe,CAACkB,aAAjB,GAAiCR;AAHH,CAAL,CAA3B;AAMA,MAAMH,MAAM,GAAGR,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACC,eAAe,CAACmB,cAAjB,GAAkC,CAACC,CAAD,EAAIjB,MAAJ,KAAeA,MAAM,CAACC;AADzB,CAAL,CAA5B;AAIA,eAAeN,eAAe,CAAC;AAC7BiB,EAAAA,KAD6B;AAE7BR,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst handleAdd = (state, action) => {\r\n  return [...state, action.payload.newContact];\r\n};\r\n\r\nconst handleRemove = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst handleSave = (state, action) => {\r\n  return localStorage.getItem(\"contacts\")\r\n    ? JSON.parse(localStorage.getItem(\"contacts\"))\r\n    : state;\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.onAddContact]: handleAdd,\r\n  [contactsActions.onRemoveContact]: handleRemove,\r\n  [contactsActions.onSaveContact]: handleSave,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}