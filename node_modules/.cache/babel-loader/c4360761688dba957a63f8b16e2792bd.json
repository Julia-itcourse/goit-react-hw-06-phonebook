{"ast":null,"code":"import _defineProperty from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:/dev/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _createReducer;import{combineReducers}from\"redux\";import{createReducer}from'@reduxjs/toolkit';import contactsActions from'./contactsActions';var handleAdd=function handleAdd(state,action){return[].concat(_toConsumableArray(state),[action.payload.newContact]);};var handleRemove=function handleRemove(state,action){return state.filter(function(contact){return contact.id!==action.payload;});};var items=createReducer([],(_createReducer={},_defineProperty(_createReducer,contactsActions.onAddContact,handleAdd),_defineProperty(_createReducer,contactsActions.onRemoveContact,handleRemove),_createReducer));var filter=createReducer('',_defineProperty({},contactsActions.onChangeFilter,function(state,action){return action.payload;}));export default combineReducers({items:items,filter:filter});//*______________________BEFORE CREATE REDUCER__________________\n// import { combineReducers } from \"redux\"\n// import contactsActions from './contactsActions'\n// const items = (state = [], { type, payload }) => {\n//   console.log(\"contactsReducer.items\")\n//   switch (type) {\n//     case contactsActions.onAddContact.type:\n//       console.log(payload.newContact)\n//       return [...state, payload.newContact]\n//     case contactsActions.onRemoveContact.type:\n//       return state.filter((contact) => contact.id !== payload)\n//     default:\n//       return state\n//   }\n// }\n// const filter = (state = \"\", { type, payload }) => {\n//   console.log(\"contactsReducer.filter\")\n//   switch (type) {\n//     case contactsActions.onChangeFilter.type:\n//       return payload\n//     default:\n//       return state\n//   }\n// }\n// export default combineReducers({\n//   items,\n//   filter,\n// })\n// *______________________BEFORE TOOLKIT__________________________\n// import { combineReducers } from \"redux\"\n// import actionTypes from \"./contactsActionTypes\"\n// const items = (state = [], { type, payload }) => {\n//   console.log(\"contactsReducer.items\")\n//   switch (type) {\n//     case actionTypes.ADD:\n//       console.log(payload.newContact)\n//       return [...state, payload.newContact]\n//     case actionTypes.REMOVE:\n//       return state.filter((contact) => contact.id !== payload.contactId)\n//     default:\n//       return state\n//   }\n// }\n// const filter = (state = \"\", { type, payload }) => {\n//   console.log(\"contactsReducer.filter\")\n//   switch (type) {\n//     case actionTypes.CHANGE_FILTER:\n//       return payload.filter\n//     default:\n//       return state\n//   }\n// }\n// export default combineReducers({\n//   items,\n//   filter,\n// })","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/redux/contacts/contactsReducer.js"],"names":["combineReducers","createReducer","contactsActions","handleAdd","state","action","payload","newContact","handleRemove","filter","contact","id","items","onAddContact","onRemoveContact","onChangeFilter"],"mappings":"2VAAA,OAASA,eAAT,KAAgC,OAAhC,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,MAAR,CAAkB,CAChC,mCAAWD,KAAX,GAAkBC,MAAM,CAACC,OAAP,CAAeC,UAAjC,GACH,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAQC,MAAR,CAAkB,CACnC,MAAOD,CAAAA,KAAK,CAACK,MAAN,CAAa,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,EAAR,GAAeN,MAAM,CAACC,OAAnC,EAAb,CAAP,CACH,CAFD,CAIA,GAAMM,CAAAA,KAAK,CAAGX,aAAa,CAAC,EAAD,mDACtBC,eAAe,CAACW,YADM,CACSV,SADT,iCAEtBD,eAAe,CAACY,eAFM,CAEYN,YAFZ,kBAA3B,CAKA,GAAMC,CAAAA,MAAM,CAAGR,aAAa,CAAC,EAAD,oBACvBC,eAAe,CAACa,cADO,CACU,SAACX,KAAD,CAAQC,MAAR,QAAmBA,CAAAA,MAAM,CAACC,OAA1B,EADV,EAA5B,CAKA,cAAeN,CAAAA,eAAe,CAAC,CAC7BY,KAAK,CAALA,KAD6B,CAE7BH,MAAM,CAANA,MAF6B,CAAD,CAA9B,CAKA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\"\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport contactsActions from './contactsActions'\r\n\r\nconst handleAdd = (state, action) =>{\r\n    return [...state, action.payload.newContact]\r\n}\r\n\r\nconst handleRemove = (state, action) =>{\r\n    return state.filter((contact) => contact.id !== action.payload)\r\n}\r\n\r\nconst items = createReducer([], {\r\n    [contactsActions.onAddContact]: handleAdd,\r\n    [contactsActions.onRemoveContact]: handleRemove,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.onChangeFilter]: (state, action) => action.payload\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})\r\n\r\n//*______________________BEFORE CREATE REDUCER__________________\r\n// import { combineReducers } from \"redux\"\r\n// import contactsActions from './contactsActions'\r\n\r\n\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   console.log(\"contactsReducer.items\")\r\n//   switch (type) {\r\n//     case contactsActions.onAddContact.type:\r\n//       console.log(payload.newContact)\r\n//       return [...state, payload.newContact]\r\n\r\n//     case contactsActions.onRemoveContact.type:\r\n//       return state.filter((contact) => contact.id !== payload)\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   console.log(\"contactsReducer.filter\")\r\n//   switch (type) {\r\n//     case contactsActions.onChangeFilter.type:\r\n//       return payload\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// })\r\n\r\n// *______________________BEFORE TOOLKIT__________________________\r\n\r\n// import { combineReducers } from \"redux\"\r\n// import actionTypes from \"./contactsActionTypes\"\r\n\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   console.log(\"contactsReducer.items\")\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       console.log(payload.newContact)\r\n//       return [...state, payload.newContact]\r\n\r\n//     case actionTypes.REMOVE:\r\n//       return state.filter((contact) => contact.id !== payload.contactId)\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   console.log(\"contactsReducer.filter\")\r\n//   switch (type) {\r\n//     case actionTypes.CHANGE_FILTER:\r\n//       return payload.filter\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// })\r\n"]},"metadata":{},"sourceType":"module"}