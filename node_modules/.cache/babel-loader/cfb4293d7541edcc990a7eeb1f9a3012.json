{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\dev\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactList from \"../ContactList\";\nimport PhonebookForm from \"../PhonebookForm\";\nimport Filter from \"../Filter\";\nimport Logo from \"../Logo\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showNotification: false\n    };\n\n    this.onChangeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  componentDidMount() {// const persistedContacts = localStorage.getItem(\"contacts\")\n    // if (persistedContacts) {\n    //   this.setState({\n    //     contacts: JSON.parse(persistedContacts),\n    //   })\n    // }\n  }\n\n  componentDidUpdate(prevProps, prevState) {// if (prevState.contacts !== this.state.contacts) {\n    //   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    // }\n  } // onAddContact = (newContact) => {\n  //   console.log(\"App.onAddContact\")\n  //   const sameContact = this.state.contacts.find(\n  //     (contact) => contact.name === newContact.name\n  //   )\n  //   if (sameContact) {\n  //     this.setState({ showNotification: true })\n  //     setTimeout(() => this.setState({ showNotification: false }), 1500)\n  //   } else {\n  //     this.setState((prevState) => {\n  //       return {\n  //         contacts: [...prevState.contacts, newContact],\n  //       }\n  //     })\n  //   }\n  // }\n  // onRemoveContact = (contactId) => {\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n  //     }\n  //   })\n  // }\n\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: true,\n        appear: true,\n        timeout: 500,\n        classNames: \"Logo-slideIn\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhonebookForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: this.props.contacts.items.length > 1,\n        timeout: 500,\n        classNames: \"filter\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"App.mapStateToProps\");\n  return {\n    contacts: state.contacts\n  };\n};\n\nexport default connect(mapStateToProps)(App); // export default App\n//*_______________BEFORE_REDUX___________________\n// import React, { Component } from \"react\"\n// import ContactList from \"../ContactList\"\n// import PhonebookForm from \"../PhonebookForm\"\n// import Filter from \"../Filter\"\n// import Logo from \"../Logo\"\n// import { CSSTransition } from \"react-transition-group\"\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     number: \"\",\n//     showNotification: false\n//   }\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\")\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       })\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//     }\n//   }\n//   onAddContact = (newContact) => {\n//     const sameContact = this.state.contacts.find(\n//       (contact) => contact.name === newContact.name\n//     )\n//     if (sameContact) {\n//       this.setState({ showNotification: true });\n//       setTimeout(() => this.setState({ showNotification: false }), 1500);\n//     } else {\n//       this.setState((prevState) => {\n//         return {\n//           contacts: [...prevState.contacts, newContact],\n//         }\n//       })\n//     }\n//   }\n//   onRemoveContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       }\n//     })\n//   }\n//   onChangeFilter = (filter) => {\n//     this.setState({ filter })\n//   }\n//   render() {\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter)\n//     )\n//     return (\n//       <>\n//       <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//         <Logo />\n//         </CSSTransition>\n//         <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//         <CSSTransition\n//             in={this.state.contacts.length > 1}\n//             timeout={500}\n//             classNames={\"filter\"}\n//             unmountOnExit\n//           >\n//           <Filter\n//             value={this.state.filter}\n//             onChangeFilter={this.onChangeFilter}\n//           />\n//           </CSSTransition>\n//           <ContactList\n//             contacts={filteredContacts}\n//             onRemoveContact={this.onRemoveContact}\n//           />\n//       </>\n//     )\n//   }\n// }\n// export default App","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-06-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactList","PhonebookForm","Filter","Logo","CSSTransition","connect","App","state","showNotification","onChangeFilter","filter","setState","componentDidMount","componentDidUpdate","prevProps","prevState","render","filteredContacts","contacts","contact","name","toLowerCase","includes","props","items","length","mapStateToProps","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BQ,KAD0B,GAClB;AACNC,MAAAA,gBAAgB,EAAE;AADZ,KADkB;;AAAA,SA8C1BC,cA9C0B,GA8CRC,MAAD,IAAY;AAC3B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAhDyB;AAAA;;AAK1BE,EAAAA,iBAAiB,GAAG,CAClB;AAEA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CACvC;AACA;AACA;AACD,GAnByB,CAqB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMAC,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBR,MAApB,CAA4BS,OAAD,IAClDA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoC,KAAKf,KAAL,CAAWG,MAA/C,CADuB,CAAzB;AAGA,wBACE;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,EAAE,EAAE,IADN;AAEE,QAAA,MAAM,EAAE,IAFV;AAGE,QAAA,OAAO,EAAE,GAHX;AAIE,QAAA,UAAU,EAAC,cAJb;AAAA,+BAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,aAAD;AACE,QAAA,EAAE,EAAE,KAAKa,KAAL,CAAWL,QAAX,CAAoBM,KAApB,CAA0BC,MAA1B,GAAmC,CADzC;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAE,QAHd;AAIE,QAAA,aAAa,MAJf;AAAA,+BAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAZF,eAqBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBADF;AAyBD;;AA/EyB;;AAkF5B,MAAMC,eAAe,GAAInB,KAAD,IAAW;AACjCoB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAO;AAAEV,IAAAA,QAAQ,EAAEX,KAAK,CAACW;AAAlB,GAAP;AACD,CAHD;;AAKA,eAAeb,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,GAAzB,CAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\"\nimport ContactList from \"../ContactList\"\nimport PhonebookForm from \"../PhonebookForm\"\nimport Filter from \"../Filter\"\nimport Logo from \"../Logo\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { connect } from \"react-redux\"\n\nclass App extends Component {\n  state = {\n    showNotification: false,\n  }\n\n  componentDidMount() {\n    // const persistedContacts = localStorage.getItem(\"contacts\")\n\n    // if (persistedContacts) {\n    //   this.setState({\n    //     contacts: JSON.parse(persistedContacts),\n    //   })\n    // }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevState.contacts !== this.state.contacts) {\n    //   localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    // }\n  }\n\n  // onAddContact = (newContact) => {\n  //   console.log(\"App.onAddContact\")\n  //   const sameContact = this.state.contacts.find(\n  //     (contact) => contact.name === newContact.name\n  //   )\n  //   if (sameContact) {\n  //     this.setState({ showNotification: true })\n  //     setTimeout(() => this.setState({ showNotification: false }), 1500)\n  //   } else {\n  //     this.setState((prevState) => {\n  //       return {\n  //         contacts: [...prevState.contacts, newContact],\n  //       }\n  //     })\n  //   }\n  // }\n\n  // onRemoveContact = (contactId) => {\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n  //     }\n  //   })\n  // }\n\n  onChangeFilter = (filter) => {\n    this.setState({ filter })\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter)\n    )\n    return (\n      <>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"Logo-slideIn\"\n        >\n          <Logo />\n        </CSSTransition>\n\n        <PhonebookForm />\n\n        <CSSTransition\n          in={this.props.contacts.items.length > 1}\n          timeout={500}\n          classNames={\"filter\"}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        <ContactList />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"App.mapStateToProps\")\n  return { contacts: state.contacts }\n}\n\nexport default connect(mapStateToProps)(App)\n\n// export default App\n\n//*_______________BEFORE_REDUX___________________\n\n// import React, { Component } from \"react\"\n// import ContactList from \"../ContactList\"\n// import PhonebookForm from \"../PhonebookForm\"\n// import Filter from \"../Filter\"\n// import Logo from \"../Logo\"\n// import { CSSTransition } from \"react-transition-group\"\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//     name: \"\",\n//     number: \"\",\n//     showNotification: false\n//   }\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\")\n\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n//   onAddContact = (newContact) => {\n//     const sameContact = this.state.contacts.find(\n//       (contact) => contact.name === newContact.name\n//     )\n//     if (sameContact) {\n//       this.setState({ showNotification: true });\n//       setTimeout(() => this.setState({ showNotification: false }), 1500);\n//     } else {\n//       this.setState((prevState) => {\n//         return {\n//           contacts: [...prevState.contacts, newContact],\n//         }\n//       })\n//     }\n//   }\n\n//   onRemoveContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       }\n//     })\n//   }\n\n//   onChangeFilter = (filter) => {\n//     this.setState({ filter })\n//   }\n\n//   render() {\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(this.state.filter)\n//     )\n//     return (\n//       <>\n//       <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//         <Logo />\n//         </CSSTransition>\n\n//         <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//         <CSSTransition\n//             in={this.state.contacts.length > 1}\n//             timeout={500}\n//             classNames={\"filter\"}\n//             unmountOnExit\n//           >\n\n//           <Filter\n//             value={this.state.filter}\n//             onChangeFilter={this.onChangeFilter}\n//           />\n//           </CSSTransition>\n\n//           <ContactList\n//             contacts={filteredContacts}\n//             onRemoveContact={this.onRemoveContact}\n//           />\n\n//       </>\n//     )\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}